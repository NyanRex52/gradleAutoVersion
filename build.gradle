apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    def versionPropsDir = "D:/YourAppMainFolder/version.properties"
    def appID = "com.example"

    def Properties versionProps = new Properties()
    def versionPropsFile = file(versionPropsDir)
    if (versionPropsFile.exists()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    }

    if (versionPropsFile.exists()) {
        versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0

        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks || ':app:assembleRelease' in runTasks) {
            value = 1;
        }

        def versionMajor = 1
        def versionMinor = 2
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def versionCodeNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionCodeNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId appID
            versionCode versionCodeNumber
            versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
            minSdkVersion 21 // update if nessecery 
            targetSdkVersion 25 // update if nessecery 
            
            //Optional
            // Enabling multidex support.
            multiDexEnabled true
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        }

        //Destenation folder
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def fileNaming = "apk/RELEASES"
                def saveLocation = "C:/Users/YourUser/Documents/PlayStore"
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    output.outputFile = new File(saveLocation, "${fileNaming}-${versionMajor}.${versionMinor}.${versionPatch}-${outputFile.name}")
                }
            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
        debug {
            debuggable true
            zipAlignEnabled true
        }
    }
    productFlavors {

    }
}
